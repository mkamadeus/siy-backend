services:
  - postgres:12.2-alpine
  - docker:dind

variables:
  POSTGRES_DB: siy_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_HOST_AUTH_METHOD: trust

cache:
  paths:
    - node_modules/
    - .yarn

stages:
  - test
  - build
  - deploy

unit-testing:
  stage: test
  image: mhart/alpine-node:14
  before_script:
    - yarn config set cache-folder .yarn
    - yarn install --frozen-lockfile
    - cp ormconfig.example.json ormconfig.json
  script:
    - yarn test
  only:
    - main
    - f/deployment-3
    - develop

build-staging:
  stage: build
  script:
    - docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker build -t $DOCKER_USERNAME/siy-backend:latest .
    - docker push $DOCKER_USERNAME/siy-backend:latest
  only:
    - main
    - f/deployment-3
    - develop

deploy-staging:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh mkamadeus@34.101.128.166 "cd ~/siy-server && docker-compose pull && docker-compose up -d --remove-orphans"


build-production:
  stage: build
  script:
    - docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker build -t $DOCKER_USERNAME/siy-backend:production .
    - docker push $DOCKER_USERNAME/siy-backend:production
  only:
    - main
